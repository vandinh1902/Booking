{"ast":null,"code":"import { call, put, takeLatest } from \"@redux-saga/core/effects\";\nimport { STATUS_CODE } from \"../../../../../utils/common/constants\";\nimport { fetchLayDanhSachPhongVeApiAction, postThongTinDatVeApiAction } from \"../services/CheckoutService\";\nimport Swal from \"sweetalert2\";\nimport { FETCH_LAY_DANH_SACH_PHONG_VE_FAILED, FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS, FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS_SAGA, FETCH_LAY_DANH_SACH_PHONG_VE_SUCCESS, POST_THONG_TIN_DAT_VE_REQUESTS_SAGA } from \"./constants\";\nimport history from \"./../../../../../history\";\n\nfunction* fetchLayDanhSachPhongVeActionSaga(_ref) {\n  let {\n    payload\n  } = _ref;\n  yield put({\n    type: FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS\n  });\n\n  try {\n    const {\n      data,\n      status\n    } = yield call(fetchLayDanhSachPhongVeApiAction, payload);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: FETCH_LAY_DANH_SACH_PHONG_VE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (err) {\n    yield put({\n      type: FETCH_LAY_DANH_SACH_PHONG_VE_FAILED,\n      payload: err.response.data\n    });\n  }\n}\n\nconst handleNoti = (icon, title, text) => {\n  Swal.fire({\n    icon: `${icon}`,\n    title: `${title}`,\n    text: `${text}`\n  });\n};\n\nfunction* postThongTinDatVeActionSaga(_ref2) {\n  let {\n    payload\n  } = _ref2;\n\n  try {\n    const {\n      data,\n      status\n    } = yield call(postThongTinDatVeApiAction, payload);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      Swal.fire({\n        icon: \"success\",\n        title: \"Đặt vé thành công\",\n        text: \"Vui lòng kiểm tra email và số điện thoại để lấy mã!\"\n      });\n      yield call(history.push, \"/\");\n    }\n  } catch (err) {\n    handleNoti(\"error\", \"Đặt vé thất bại\", `${err.response.data}`);\n  }\n}\n\nexport const ChiTietPhongVeSagas = [takeLatest(FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS_SAGA, fetchLayDanhSachPhongVeActionSaga), takeLatest(POST_THONG_TIN_DAT_VE_REQUESTS_SAGA, postThongTinDatVeActionSaga)];","map":{"version":3,"sources":["C:/Users/ngova/Desktop/updateMovies/Booking/src/container/HomeTemplate/PhongVe/modules/redux/sagas.js"],"names":["call","put","takeLatest","STATUS_CODE","fetchLayDanhSachPhongVeApiAction","postThongTinDatVeApiAction","Swal","FETCH_LAY_DANH_SACH_PHONG_VE_FAILED","FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS","FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS_SAGA","FETCH_LAY_DANH_SACH_PHONG_VE_SUCCESS","POST_THONG_TIN_DAT_VE_REQUESTS_SAGA","history","fetchLayDanhSachPhongVeActionSaga","payload","type","data","status","SUCCESS","err","response","handleNoti","icon","title","text","fire","postThongTinDatVeActionSaga","push","ChiTietPhongVeSagas"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,0BAAtC;AACA,SAASC,WAAT,QAA4B,uCAA5B;AACA,SACEC,gCADF,EAEEC,0BAFF,QAGO,6BAHP;AAIA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,SACEC,mCADF,EAEEC,qCAFF,EAGEC,0CAHF,EAIEC,oCAJF,EAKEC,mCALF,QAMO,aANP;AAOA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,UAAUC,iCAAV,OAAyD;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACvD,QAAMb,GAAG,CAAC;AACRc,IAAAA,IAAI,EAAEP;AADE,GAAD,CAAT;;AAGA,MAAI;AACF,UAAM;AAAEQ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMjB,IAAI,CACjCI,gCADiC,EAEjCU,OAFiC,CAAnC;;AAIA,QAAIG,MAAM,KAAKd,WAAW,CAACe,OAA3B,EAAoC;AAClC,YAAMjB,GAAG,CAAC;AACRc,QAAAA,IAAI,EAAEL,oCADE;AAERI,QAAAA,OAAO,EAAEE;AAFD,OAAD,CAAT;AAID;AACF,GAXD,CAWE,OAAOG,GAAP,EAAY;AACZ,UAAMlB,GAAG,CAAC;AACRc,MAAAA,IAAI,EAAER,mCADE;AAERO,MAAAA,OAAO,EAAEK,GAAG,CAACC,QAAJ,CAAaJ;AAFd,KAAD,CAAT;AAID;AACF;;AAED,MAAMK,UAAU,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,IAAd,KAAuB;AACxClB,EAAAA,IAAI,CAACmB,IAAL,CAAU;AACRH,IAAAA,IAAI,EAAG,GAAEA,IAAK,EADN;AAERC,IAAAA,KAAK,EAAG,GAAEA,KAAM,EAFR;AAGRC,IAAAA,IAAI,EAAG,GAAEA,IAAK;AAHN,GAAV;AAKD,CAND;;AAQA,UAAUE,2BAAV,QAAmD;AAAA,MAAb;AAAEZ,IAAAA;AAAF,GAAa;;AACjD,MAAI;AACF,UAAM;AAAEE,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMjB,IAAI,CAACK,0BAAD,EAA6BS,OAA7B,CAAnC;;AACA,QAAIG,MAAM,KAAKd,WAAW,CAACe,OAA3B,EAAoC;AAClCZ,MAAAA,IAAI,CAACmB,IAAL,CAAU;AACRH,QAAAA,IAAI,EAAE,SADE;AAERC,QAAAA,KAAK,EAAE,mBAFC;AAGRC,QAAAA,IAAI,EAAE;AAHE,OAAV;AAKA,YAAMxB,IAAI,CAACY,OAAO,CAACe,IAAT,EAAe,GAAf,CAAV;AACD;AACF,GAVD,CAUE,OAAOR,GAAP,EAAY;AACZE,IAAAA,UAAU,CAAC,OAAD,EAAU,iBAAV,EAA8B,GAAEF,GAAG,CAACC,QAAJ,CAAaJ,IAAK,EAAlD,CAAV;AACD;AACF;;AAED,OAAO,MAAMY,mBAAmB,GAAG,CACjC1B,UAAU,CACRO,0CADQ,EAERI,iCAFQ,CADuB,EAKjCX,UAAU,CAACS,mCAAD,EAAsCe,2BAAtC,CALuB,CAA5B","sourcesContent":["import { call, put, takeLatest } from \"@redux-saga/core/effects\";\r\nimport { STATUS_CODE } from \"../../../../../utils/common/constants\";\r\nimport {\r\n  fetchLayDanhSachPhongVeApiAction,\r\n  postThongTinDatVeApiAction,\r\n} from \"../services/CheckoutService\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport {\r\n  FETCH_LAY_DANH_SACH_PHONG_VE_FAILED,\r\n  FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS,\r\n  FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS_SAGA,\r\n  FETCH_LAY_DANH_SACH_PHONG_VE_SUCCESS,\r\n  POST_THONG_TIN_DAT_VE_REQUESTS_SAGA,\r\n} from \"./constants\";\r\nimport history from \"./../../../../../history\";\r\n\r\nfunction* fetchLayDanhSachPhongVeActionSaga({ payload }) {\r\n  yield put({\r\n    type: FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS,\r\n  });\r\n  try {\r\n    const { data, status } = yield call(\r\n      fetchLayDanhSachPhongVeApiAction,\r\n      payload\r\n    );\r\n    if (status === STATUS_CODE.SUCCESS) {\r\n      yield put({\r\n        type: FETCH_LAY_DANH_SACH_PHONG_VE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    yield put({\r\n      type: FETCH_LAY_DANH_SACH_PHONG_VE_FAILED,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nconst handleNoti = (icon, title, text) => {\r\n  Swal.fire({\r\n    icon: `${icon}`,\r\n    title: `${title}`,\r\n    text: `${text}`,\r\n  });\r\n};\r\n\r\nfunction* postThongTinDatVeActionSaga({ payload }) {\r\n  try {\r\n    const { data, status } = yield call(postThongTinDatVeApiAction, payload);\r\n    if (status === STATUS_CODE.SUCCESS) {\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: \"Đặt vé thành công\",\r\n        text: \"Vui lòng kiểm tra email và số điện thoại để lấy mã!\",\r\n      });\r\n      yield call(history.push, \"/\");\r\n    }\r\n  } catch (err) {\r\n    handleNoti(\"error\", \"Đặt vé thất bại\", `${err.response.data}`);\r\n  }\r\n}\r\n\r\nexport const ChiTietPhongVeSagas = [\r\n  takeLatest(\r\n    FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS_SAGA,\r\n    fetchLayDanhSachPhongVeActionSaga\r\n  ),\r\n  takeLatest(POST_THONG_TIN_DAT_VE_REQUESTS_SAGA, postThongTinDatVeActionSaga),\r\n];\r\n"]},"metadata":{},"sourceType":"module"}