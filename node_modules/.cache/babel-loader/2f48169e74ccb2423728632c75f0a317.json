{"ast":null,"code":"import { AVOID_BOOKED_SEAT, BOOKING_SEAT, FETCH_LAY_DANH_SACH_PHONG_VE_FAILED, FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS, FETCH_LAY_DANH_SACH_PHONG_VE_SUCCESS, BUYING_COMBO, CLEAN_UP_REDUCER_PHONG_VE } from \"./constants\";\nimport { combos } from \"./../../Combo/ComboType/dataCombo\";\nconst initialState = {\n  infoPhongVe: null,\n  isLoading: false,\n  err: null,\n  bookingSeat: [],\n  bookedSeat: [],\n  combosData: combos,\n  totalPrice: 0,\n  totalPriceSeat: 0,\n  totalPriceCombo: 0\n};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS:\n      state.isLoading = true;\n      return { ...state\n      };\n\n    case FETCH_LAY_DANH_SACH_PHONG_VE_SUCCESS:\n      state.isLoading = false;\n      state.infoPhongVe = payload;\n      let booked = state.infoPhongVe.danhSachGhe.filter(bookedSeat => {\n        return bookedSeat.daDat === true;\n      });\n      state.bookedSeat = booked;\n      return { ...state\n      };\n\n    case FETCH_LAY_DANH_SACH_PHONG_VE_FAILED:\n      state.isLoading = false;\n      state.err = payload;\n      return { ...state\n      };\n\n    case CLEAN_UP_REDUCER_PHONG_VE:\n      state.infoPhongVe = null;\n      state.isLoading = false;\n      state.err = null;\n      state.bookingSeat = [];\n      state.combosData = combos;\n      state.totalPrice = 0;\n      state.totalPriceSeat = 0;\n      state.totalPriceCombo = 0;\n      return { ...state\n      };\n\n    case BOOKING_SEAT:\n      {\n        const newBookingSeat = [...state.bookingSeat];\n        if (payload.daDat) return { ...state\n        };\n        const index = newBookingSeat.findIndex(bookedSeat => {\n          return bookedSeat.maGhe === payload.maGhe;\n        });\n\n        if (index !== -1) {\n          newBookingSeat.splice(index, 1);\n        } else {\n          newBookingSeat.push(payload);\n        }\n\n        state.bookingSeat = newBookingSeat;\n        const totalSeat = state.bookingSeat.reduce((total, cur, index) => {\n          return total += cur.giaVe;\n        }, 0);\n        state.totalPriceSeat = totalSeat;\n        state.totalPrice = state.totalPriceCombo + state.totalPriceSeat;\n        return { ...state\n        };\n      }\n\n    case BUYING_COMBO:\n      {\n        const {\n          combo,\n          isAddMinus\n        } = payload;\n        const arrCombosData = [...state.combosData];\n        const index = arrCombosData.findIndex(comboData => {\n          return comboData.ten === combo.ten;\n        });\n\n        if (isAddMinus > 0) {\n          arrCombosData[index].quantity += 1;\n        } else {\n          if (arrCombosData[index].quantity > 0) {\n            arrCombosData[index].quantity -= 1;\n          } else {\n            arrCombosData[index].quantity = 0;\n          }\n        }\n\n        state.combosData = arrCombosData;\n        const totalCombos = state.combosData.reduce((total, cur, index) => {\n          return total += cur.gia * cur.quantity;\n        }, 0);\n        state.totalPriceCombo = totalCombos;\n        state.totalPrice = state.totalPriceCombo + state.totalPriceSeat;\n        return { ...state\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n});","map":{"version":3,"sources":["C:/Users/DinhNgo/Desktop/BookingMovie/src/container/HomeTemplate/PhongVe/modules/redux/reducer.js"],"names":["AVOID_BOOKED_SEAT","BOOKING_SEAT","FETCH_LAY_DANH_SACH_PHONG_VE_FAILED","FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS","FETCH_LAY_DANH_SACH_PHONG_VE_SUCCESS","BUYING_COMBO","CLEAN_UP_REDUCER_PHONG_VE","combos","initialState","infoPhongVe","isLoading","err","bookingSeat","bookedSeat","combosData","totalPrice","totalPriceSeat","totalPriceCombo","state","type","payload","booked","danhSachGhe","filter","daDat","newBookingSeat","index","findIndex","maGhe","splice","push","totalSeat","reduce","total","cur","giaVe","combo","isAddMinus","arrCombosData","comboData","ten","quantity","totalCombos","gia"],"mappings":"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","sourcesContent":["import {\n  AVOID_BOOKED_SEAT,\n  BOOKING_SEAT,\n  FETCH_LAY_DANH_SACH_PHONG_VE_FAILED,\n  FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS,\n  FETCH_LAY_DANH_SACH_PHONG_VE_SUCCESS,\n  BUYING_COMBO,\n  CLEAN_UP_REDUCER_PHONG_VE,\n} from \"./constants\";\nimport { combos } from \"./../../Combo/ComboType/dataCombo\";\n\nconst initialState = {\n  infoPhongVe: null,\n  isLoading: false,\n  err: null,\n  bookingSeat: [],\n  bookedSeat: [],\n  combosData: combos,\n  totalPrice: 0,\n  totalPriceSeat: 0,\n  totalPriceCombo: 0,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case FETCH_LAY_DANH_SACH_PHONG_VE_REQUESTS:\n      state.isLoading = true;\n      return { ...state };\n\n    case FETCH_LAY_DANH_SACH_PHONG_VE_SUCCESS:\n      state.isLoading = false;\n      state.infoPhongVe = payload;\n      let booked = state.infoPhongVe.danhSachGhe.filter((bookedSeat) => {\n        return bookedSeat.daDat === true;\n      });\n      state.bookedSeat = booked;\n      return { ...state };\n\n    case FETCH_LAY_DANH_SACH_PHONG_VE_FAILED:\n      state.isLoading = false;\n      state.err = payload;\n      return { ...state };\n\n    case CLEAN_UP_REDUCER_PHONG_VE:\n      state.infoPhongVe = null;\n      state.isLoading = false;\n      state.err = null;\n      state.bookingSeat = [];\n      state.combosData = combos;\n      state.totalPrice = 0;\n      state.totalPriceSeat = 0;\n      state.totalPriceCombo = 0;\n      return { ...state };\n\n    case BOOKING_SEAT: {\n      const newBookingSeat = [...state.bookingSeat];\n      if (payload.daDat) return { ...state };\n      const index = newBookingSeat.findIndex((bookedSeat) => {\n        return bookedSeat.maGhe === payload.maGhe;\n      });\n      if (index !== -1) {\n        newBookingSeat.splice(index, 1);\n      } else {\n        newBookingSeat.push(payload);\n      }\n      state.bookingSeat = newBookingSeat;\n      const totalSeat = state.bookingSeat.reduce((total, cur, index) => {\n        return (total += cur.giaVe);\n      }, 0);\n      state.totalPriceSeat = totalSeat;\n      state.totalPrice = state.totalPriceCombo + state.totalPriceSeat;\n      return { ...state };\n    }\n\n    case BUYING_COMBO: {\n      const { combo, isAddMinus } = payload;\n      const arrCombosData = [...state.combosData];\n      const index = arrCombosData.findIndex((comboData) => {\n        return comboData.ten === combo.ten;\n      });\n      if (isAddMinus > 0) {\n        arrCombosData[index].quantity += 1;\n      } else {\n        if (arrCombosData[index].quantity > 0) {\n          arrCombosData[index].quantity -= 1;\n        } else {\n          arrCombosData[index].quantity = 0;\n        }\n      }\n      state.combosData = arrCombosData;\n      const totalCombos = state.combosData.reduce((total, cur, index) => {\n        return (total += cur.gia * cur.quantity);\n      }, 0);\n      state.totalPriceCombo = totalCombos;\n      state.totalPrice = state.totalPriceCombo + state.totalPriceSeat;\n      return { ...state };\n    }\n\n    default:\n      return { ...state };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}