{"ast":null,"code":"import { call, put, takeLatest } from \"@redux-saga/core/effects\";\nimport { STATUS_CODE } from \"../../../../../utils/common/constants\";\nimport { fetchUserInfoApiActionApi, postThongTinDangKiApiActionApi, postThongTinDangNhapApiActionApi } from \"../services/SignInSignUpService\";\nimport { FETCH_USER_INFO_FAILED, FETCH_USER_INFO_REQUESTS, FETCH_USER_INFO_REQUESTS_SAGA, FETCH_USER_INFO_SUCCESS, POST_THONG_TIN_DANG_KI_REQUESTS_SAGA, POST_THONG_TIN_DANG_NHAP_FACEBOOK_REQUESTS_SAGA, POST_THONG_TIN_DANG_NHAP_FAILED, POST_THONG_TIN_DANG_NHAP_REQUESTS, POST_THONG_TIN_DANG_NHAP_REQUESTS_SAGA, POST_THONG_TIN_DANG_NHAP_SUCCESS } from \"./constants\";\nimport history from \"./../../../../../history\";\nimport { MA_NHOM } from \"../../../../../SystemServices\";\nimport { useDispatch } from \"react-redux\";\nimport Swal from \"sweetalert2\";\n\nconst handleNoti = (icon, title, text) => {\n  Swal.fire({\n    icon: `${icon}`,\n    title: `${title}`,\n    text: `${text}`\n  });\n};\n\nfunction* postThongTinDangNhapApiActionSaga({\n  payload\n}) {\n  const {\n    userInfo\n  } = payload;\n  yield put({\n    type: POST_THONG_TIN_DANG_NHAP_REQUESTS\n  });\n\n  try {\n    const {\n      data,\n      status\n    } = yield call(postThongTinDangNhapApiActionApi, userInfo);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: POST_THONG_TIN_DANG_NHAP_SUCCESS\n      });\n      handleNoti(\"success\", \"Đăng nhập thành công\", \"\");\n      localStorage.setItem(\"USER\", JSON.stringify(data));\n      yield call(history.push, \"/\");\n    }\n  } catch (err) {\n    handleNoti(\"error\", \"Đăng nhập thất bại\", `${err.response.data}`);\n  }\n}\n\nfunction* postThongTinDangKiApiActionSaga({\n  payload\n}) {\n  yield put({\n    type: POST_THONG_TIN_DANG_NHAP_REQUESTS\n  });\n\n  try {\n    const {\n      data,\n      status\n    } = yield call(postThongTinDangKiApiActionApi, payload);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: POST_THONG_TIN_DANG_NHAP_SUCCESS\n      });\n      Swal.fire({\n        title: \"Đăng kí thành công.\",\n        text: \"Vui lòng đăng nhập\",\n        icon: \"success\",\n        showCancelButton: true,\n        confirmButtonText: \"Đăng nhập\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          history.push(\"/signin\");\n        }\n      });\n    }\n  } catch (err) {\n    handleNoti(\"error\", \"Đăng kí thất bại\", `${err.response.data}`);\n  }\n}\n\nfunction* postThongTinDangNhapFacebookApiActionSaga({\n  payload\n}) {\n  const {\n    email: taiKhoan,\n    matKhau\n  } = payload;\n  const userInfo = {\n    taiKhoan,\n    matKhau\n  };\n  yield put({\n    type: POST_THONG_TIN_DANG_NHAP_REQUESTS\n  });\n\n  try {\n    const {\n      data,\n      status\n    } = yield call(postThongTinDangNhapApiActionApi, userInfo);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: POST_THONG_TIN_DANG_NHAP_SUCCESS\n      });\n      localStorage.setItem(\"USER\", JSON.stringify(data));\n      yield call(history.push, \"/\");\n    }\n  } catch (err) {\n    const {\n      email,\n      name: hoTen,\n      maLoaiNguoiDung\n    } = payload;\n    const maNhom = MA_NHOM;\n    const soDt = \"\";\n    yield put({\n      type: POST_THONG_TIN_DANG_NHAP_FAILED,\n      payload: err.response.data\n    });\n\n    try {\n      const userInfo = {\n        taiKhoan,\n        matKhau,\n        email: \"buigiaanfb2@gmail.com\",\n        soDt,\n        maNhom,\n        maLoaiNguoiDung,\n        hoTen\n      };\n      const {\n        data,\n        status\n      } = yield call(postThongTinDangKiApiActionApi, userInfo);\n\n      if (status === STATUS_CODE.SUCCESS) {\n        const {\n          taiKhoan,\n          matKhau\n        } = data;\n        const userInfo = {\n          taiKhoan,\n          matKhau\n        };\n        yield put({\n          type: POST_THONG_TIN_DANG_NHAP_REQUESTS\n        });\n\n        try {\n          const {\n            data,\n            status\n          } = yield call(postThongTinDangNhapApiActionApi, userInfo);\n\n          if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n              type: POST_THONG_TIN_DANG_NHAP_SUCCESS\n            });\n            localStorage.setItem(\"USER\", JSON.stringify(data));\n            yield call(history.push, \"/\");\n          }\n        } catch (err) {\n          yield put({\n            type: POST_THONG_TIN_DANG_NHAP_FAILED,\n            payload: err.response.data\n          });\n        }\n      }\n    } catch (err) {\n      console.log(err.response.data);\n    }\n  }\n}\n\nfunction* fetchUserInfoApiActionSaga({\n  payload\n}) {\n  yield put({\n    type: FETCH_USER_INFO_REQUESTS\n  });\n\n  try {\n    const {\n      data,\n      status\n    } = yield call(fetchUserInfoApiActionApi, payload);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: FETCH_USER_INFO_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (err) {\n    yield put({\n      type: FETCH_USER_INFO_FAILED,\n      payload: err.response.data\n    });\n  }\n}\n\nexport const PostThongTinDangKiDangNhapSagas = [takeLatest(POST_THONG_TIN_DANG_NHAP_REQUESTS_SAGA, postThongTinDangNhapApiActionSaga), takeLatest(POST_THONG_TIN_DANG_NHAP_FACEBOOK_REQUESTS_SAGA, postThongTinDangNhapFacebookApiActionSaga), takeLatest(FETCH_USER_INFO_REQUESTS_SAGA, fetchUserInfoApiActionSaga), takeLatest(POST_THONG_TIN_DANG_KI_REQUESTS_SAGA, postThongTinDangKiApiActionSaga)];","map":{"version":3,"sources":["C:/Users/DinhNgo/Desktop/BookingMovie/src/container/HomeTemplate/Signin/modules/redux/sagas.js"],"names":["call","put","takeLatest","STATUS_CODE","fetchUserInfoApiActionApi","postThongTinDangKiApiActionApi","postThongTinDangNhapApiActionApi","FETCH_USER_INFO_FAILED","FETCH_USER_INFO_REQUESTS","FETCH_USER_INFO_REQUESTS_SAGA","FETCH_USER_INFO_SUCCESS","POST_THONG_TIN_DANG_KI_REQUESTS_SAGA","POST_THONG_TIN_DANG_NHAP_FACEBOOK_REQUESTS_SAGA","POST_THONG_TIN_DANG_NHAP_FAILED","POST_THONG_TIN_DANG_NHAP_REQUESTS","POST_THONG_TIN_DANG_NHAP_REQUESTS_SAGA","POST_THONG_TIN_DANG_NHAP_SUCCESS","history","MA_NHOM","useDispatch","Swal","handleNoti","icon","title","text","fire","postThongTinDangNhapApiActionSaga","payload","userInfo","type","data","status","SUCCESS","localStorage","setItem","JSON","stringify","push","err","response","postThongTinDangKiApiActionSaga","showCancelButton","confirmButtonText","then","result","isConfirmed","postThongTinDangNhapFacebookApiActionSaga","email","taiKhoan","matKhau","name","hoTen","maLoaiNguoiDung","maNhom","soDt","console","log","fetchUserInfoApiActionSaga","PostThongTinDangKiDangNhapSagas"],"mappings":"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","sourcesContent":["import { call, put, takeLatest } from \"@redux-saga/core/effects\";\nimport { STATUS_CODE } from \"../../../../../utils/common/constants\";\nimport {\n  fetchUserInfoApiActionApi,\n  postThongTinDangKiApiActionApi,\n  postThongTinDangNhapApiActionApi,\n} from \"../services/SignInSignUpService\";\nimport {\n  FETCH_USER_INFO_FAILED,\n  FETCH_USER_INFO_REQUESTS,\n  FETCH_USER_INFO_REQUESTS_SAGA,\n  FETCH_USER_INFO_SUCCESS,\n  POST_THONG_TIN_DANG_KI_REQUESTS_SAGA,\n  POST_THONG_TIN_DANG_NHAP_FACEBOOK_REQUESTS_SAGA,\n  POST_THONG_TIN_DANG_NHAP_FAILED,\n  POST_THONG_TIN_DANG_NHAP_REQUESTS,\n  POST_THONG_TIN_DANG_NHAP_REQUESTS_SAGA,\n  POST_THONG_TIN_DANG_NHAP_SUCCESS,\n} from \"./constants\";\nimport history from \"./../../../../../history\";\nimport { MA_NHOM } from \"../../../../../SystemServices\";\nimport { useDispatch } from \"react-redux\";\nimport Swal from \"sweetalert2\";\n\nconst handleNoti = (icon, title, text) => {\n  Swal.fire({\n    icon: `${icon}`,\n    title: `${title}`,\n    text: `${text}`,\n  });\n};\n\nfunction* postThongTinDangNhapApiActionSaga({ payload }) {\n  const { userInfo } = payload;\n  yield put({\n    type: POST_THONG_TIN_DANG_NHAP_REQUESTS,\n  });\n  try {\n    const { data, status } = yield call(\n      postThongTinDangNhapApiActionApi,\n      userInfo\n    );\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: POST_THONG_TIN_DANG_NHAP_SUCCESS,\n      });\n      handleNoti(\"success\", \"Đăng nhập thành công\", \"\");\n      localStorage.setItem(\"USER\", JSON.stringify(data));\n      yield call(history.push, \"/\");\n    }\n  } catch (err) {\n    handleNoti(\"error\", \"Đăng nhập thất bại\", `${err.response.data}`);\n  }\n}\n\nfunction* postThongTinDangKiApiActionSaga({ payload }) {\n  yield put({\n    type: POST_THONG_TIN_DANG_NHAP_REQUESTS,\n  });\n  try {\n    const { data, status } = yield call(\n      postThongTinDangKiApiActionApi,\n      payload\n    );\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: POST_THONG_TIN_DANG_NHAP_SUCCESS,\n      });\n      Swal.fire({\n        title: \"Đăng kí thành công.\",\n        text: \"Vui lòng đăng nhập\",\n        icon: \"success\",\n        showCancelButton: true,\n        confirmButtonText: \"Đăng nhập\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          history.push(\"/signin\");\n        }\n      });\n    }\n  } catch (err) {\n    handleNoti(\"error\", \"Đăng kí thất bại\", `${err.response.data}`);\n  }\n}\n\nfunction* postThongTinDangNhapFacebookApiActionSaga({ payload }) {\n  const { email: taiKhoan, matKhau } = payload;\n  const userInfo = { taiKhoan, matKhau };\n  yield put({\n    type: POST_THONG_TIN_DANG_NHAP_REQUESTS,\n  });\n  try {\n    const { data, status } = yield call(\n      postThongTinDangNhapApiActionApi,\n      userInfo\n    );\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: POST_THONG_TIN_DANG_NHAP_SUCCESS,\n      });\n\n      localStorage.setItem(\"USER\", JSON.stringify(data));\n      yield call(history.push, \"/\");\n    }\n  } catch (err) {\n    const { email, name: hoTen, maLoaiNguoiDung } = payload;\n    const maNhom = MA_NHOM;\n    const soDt = \"\";\n    yield put({\n      type: POST_THONG_TIN_DANG_NHAP_FAILED,\n      payload: err.response.data,\n    });\n    try {\n      const userInfo = {\n        taiKhoan,\n        matKhau,\n        email: \"buigiaanfb2@gmail.com\",\n        soDt,\n        maNhom,\n        maLoaiNguoiDung,\n        hoTen,\n      };\n      const { data, status } = yield call(\n        postThongTinDangKiApiActionApi,\n        userInfo\n      );\n      if (status === STATUS_CODE.SUCCESS) {\n        const { taiKhoan, matKhau } = data;\n        const userInfo = { taiKhoan, matKhau };\n        yield put({\n          type: POST_THONG_TIN_DANG_NHAP_REQUESTS,\n        });\n        try {\n          const { data, status } = yield call(\n            postThongTinDangNhapApiActionApi,\n            userInfo\n          );\n          if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n              type: POST_THONG_TIN_DANG_NHAP_SUCCESS,\n            });\n            localStorage.setItem(\"USER\", JSON.stringify(data));\n            yield call(history.push, \"/\");\n          }\n        } catch (err) {\n          yield put({\n            type: POST_THONG_TIN_DANG_NHAP_FAILED,\n            payload: err.response.data,\n          });\n        }\n      }\n    } catch (err) {\n      console.log(err.response.data);\n    }\n  }\n}\n\nfunction* fetchUserInfoApiActionSaga({ payload }) {\n  yield put({\n    type: FETCH_USER_INFO_REQUESTS,\n  });\n  try {\n    const { data, status } = yield call(fetchUserInfoApiActionApi, payload);\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: FETCH_USER_INFO_SUCCESS,\n        payload: data,\n      });\n    }\n  } catch (err) {\n    yield put({\n      type: FETCH_USER_INFO_FAILED,\n      payload: err.response.data,\n    });\n  }\n}\n\nexport const PostThongTinDangKiDangNhapSagas = [\n  takeLatest(\n    POST_THONG_TIN_DANG_NHAP_REQUESTS_SAGA,\n    postThongTinDangNhapApiActionSaga\n  ),\n  takeLatest(\n    POST_THONG_TIN_DANG_NHAP_FACEBOOK_REQUESTS_SAGA,\n    postThongTinDangNhapFacebookApiActionSaga\n  ),\n  takeLatest(FETCH_USER_INFO_REQUESTS_SAGA, fetchUserInfoApiActionSaga),\n  takeLatest(\n    POST_THONG_TIN_DANG_KI_REQUESTS_SAGA,\n    postThongTinDangKiApiActionSaga\n  ),\n];\n"]},"metadata":{},"sourceType":"module"}